"use strict";var emulatorServicesCompilationDate="Wed Nov 23 09:50:44 EST 2016",gamingPlatform;!function(a){var b;!function(a){function b(){return window.performance?window.performance.now():(new Date).getTime()}function c(a,c,d){var e=b()-o,f=Math.round(e)/1e3,g=["",f," seconds:"].concat(a);return d.apply(console,g),{millisecondsFromStart:e,args:a,logLevel:c}}function d(a,b,d){n.length>100&&n.shift(),n.push(c(a,b,d))}function e(){return n.concat(m)}function f(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];m.push(c(a,l.ALWAYS,console.log))}function g(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.INFO,console.log)}function h(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.DEBUG,console.debug)}function i(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.WARN,console.warn)}function j(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.ERROR,console.error)}function k(){for(var a=[],b=0;b<arguments.length;b++)a[b-0]=arguments[b];d(a,l.LOG,console.log)}var l=function(){function a(){}return a.ALWAYS="ALWAYS",a.LOG="LOG",a.INFO="INFO",a.DEBUG="DEBUG",a.WARN="WARN",a.ERROR="ERROR",a}(),m=[],n=[],o=b();a.getCurrentTime=b,a.getLogs=e,a.alwaysLog=f,a.info=g,a.debug=h,a.warn=i,a.error=j,a.log=k}(b=a.log||(a.log={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(a){N=a}function d(a){M=a}function e(a){H=a}function f(a){G=a}function g(){z||k("You must call setGame before any other method."),A={},B=null,C={},D=null,E=[],F=0,J=0,K=null,I=0}function h(a){if(Object&&Object.keys)return Object.keys(a);var b=[];for(var c in a)b.push(c);return b}function i(a){return angular.copy(a)}function j(a){return void 0===a||null===a}function k(){for(var b=[],c=0;c<arguments.length;c++)b[c-0]=arguments[c];a.log.error("Throwing an error with these arguments=",b);var d=b.join(", ");throw new Error(d)}function l(a,b){for(var c=[],d=0;d<b.length;d++){var e=b[d];j(e.set)||j(e.set.visibleToPlayerIndexes)||-1!==e.set.visibleToPlayerIndexes.indexOf(a)?c.push(e):c.push({set:{key:e.set.key,value:null,visibleToPlayerIndexes:e.set.visibleToPlayerIndexes}})}return c}function m(a,b,c){if(null===b)return null;for(var d={},e=h(b),f=0;f<e.length;f++){var g=e[f],i=c[g],k=null;(j(i)||i.indexOf(a)>-1)&&(k=b[g]),d[g]=k}return d}function n(a){for(var b=a.slice(0),c=[];b.length>=1;){var d=o(0,b.length),e=b.splice(d,1)[0];c.push(e)}return c}function o(a,b){if(j(a)||j(b)||a>=b)throw new Error("In randomFromTo(from,to), you must have from<to, but from="+a+" to="+b);return Math.floor(Math.random()*(b-a)+a)}function p(b){var c,d;if(j(b.set))if(j(b.setTurn))if(j(b.setRandomInteger))if(j(b.setVisibility))if(j(b["delete"]))if(j(b.shuffle))if(j(b.endMatch))k("Illegal operation, it must contain either set, setRandomInteger, setVisibility, delete, shuffle, or endMatch: "+angular.toJson(b,!0));else{var e=b.endMatch;L++;var f=e.endMatchScores;(j(f)||f.length!==G.length)&&k("Field scores in EndMatch operation must be an array of the same length as the number of players. operation="+angular.toJson(b,!0)),K=f,"onlyAIs"===M&&a.$timeout(function(){g()},1e3)}else{var h=b.shuffle,l=h.keys;(j(l)||0===l.length)&&k("Field keys in Shuffle operation must be a non empty array. operation="+angular.toJson(b,!0));for(var m=n(l),p=i(A),q=i(C),r=0;r<m.length;r++){var s=l[r],t=m[r];A[t]=p[s],C[t]=q[s]}}else{var u=b["delete"];c=u.key,j(c)&&k("Field key in Delete operation must be non null. operation="+angular.toJson(b,!0)),delete A[c],delete C[c]}else{var v=b.setVisibility;c=v.key,d=v.visibleToPlayerIndexes,j(c)&&k("Fields key in SetVisibility operation must be non null. operation="+angular.toJson(b,!0)),d?C[c]=d:delete C[c]}else{var w=b.setRandomInteger;c=w.key;var x=w.from,y=w.to;(j(c)||j(x)||j(y))&&k("Fields key, from, and to, in SetRandomInteger operation must be non null. operation="+angular.toJson(b,!0));var z=o(x,y);A[c]=z,delete C[c]}else{var B=b.setTurn;J=B.turnIndex,L++}else{var D=b.set;c=D.key,d=D.visibleToPlayerIndexes;var E=D.value;(j(c)||j(E))&&k("Fields key and value in Set operation must be non null. operation="+angular.toJson(b,!0)),A[c]=E,d?C[c]=d:delete C[c]}}function q(){return"playWhite"===M?0:"playBlack"===M?1:"playViewer"===M?-2:"playAgainstTheComputer"===M||"onlyAIs"===M||"multiplayer"===M||"passAndPlay"===M?J:Number(M)}function r(){return{turnIndexBeforeMove:F,turnIndex:J,endMatchScores:K,moveNumber:I,randomSeed:H,lastMove:E,lastState:B,currentState:A,lastVisibleTo:D,currentVisibleTo:C}}function s(a){return void 0===a?null:a}function t(a){F=s(a.turnIndexBeforeMove),J=s(a.turnIndex),K=s(a.endMatchScores),I=a.moveNumber?a.moveNumber:0,H=s(a.randomSeed),E=s(a.lastMove),B=s(a.lastState),A=s(a.currentState),D=s(a.lastVisibleTo),C=s(a.currentVisibleTo)}function u(){var a=q(),b=l(a,E),c=m(a,B,D),d=m(a,A,C),e={move:b,turnIndexBeforeMove:F,turnIndexAfterMove:J,stateBeforeMove:c,stateAfterMove:d,numberOfPlayers:G.length,playersInfo:G,yourPlayerIndex:a,playMode:"multiplayer"===M?a:M,moveNumber:I,randomSeed:H,endMatchScores:K};angular.equals(O,e)||(O=e,E.length>0&&z.isMoveOk({move:b,turnIndexBeforeMove:F,turnIndexAfterMove:J,stateBeforeMove:c,stateAfterMove:d,numberOfPlayers:G.length})!==!0&&k("You declared a hacker for a legal move! move="+b),z.updateUI(e))}function v(){0===N?u():a.$timeout(function(){u()},N)}function w(a){z||k("You must call setGame before any other method."),a||k("operations must be an array"),-1===J&&k("You cannot send a move after the game ended!"),q()!==J&&k("Expected a move from turnIndex="+J+" but got the move from index="+q()),B=i(A),D=i(C),F=J,J=-1,E=a,I++,H&&Math.seedrandom&&Math.seedrandom(H+I),L=0;for(var b=0;b<a.length;b++){var c=a[b];p(c)}1!==L&&k("We must have either SetTurn or EndMatch, but not both: setTurnOrEndMatchCount="+L),J>=-1&&J<G.length||k("turnIndex must be between -1 and "+G.length+", but it was "+J+"."),v()}function x(a){void 0!==z&&k("You can call setGame only once"),z=a}function y(){return K}var z,A,B,C,D,E,F,G,H,I,J=0,K=null,L=0,M="passAndPlay",N=10;b.setSimulateServerDelayMilliseconds=c,b.setPlayMode=d,b.setRandomSeed=e,b.setPlayers=f,b.initNewMatch=g,b.randomFromTo=o,b.getMatchState=r,b.setMatchState=t;var O=null;b.sendUpdateUi=v,b.makeMove=w,b.setGame=x,b.getEndMatchScores=y}(b=a.stateService||(a.stateService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(b){a.log.info("Game sent message",b),b.gameUrl=e,window.parent.postMessage(b,"*")}function d(b){window.addEventListener("message",function(c){var d=c.source;if(d===window.parent){var e=c.data;a.log.info("Game got message",e),a.$rootScope.$apply(function(){b(e)})}},!1)}var e=location.toString();b.sendMessage=c,b.addMessageListener=d}(b=a.messageService||(a.messageService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(a){n=angular.copy(a),l.communityUI(a)}function d(b,d){if(!n)throw new Error("Don't call communityMove before getting communityUI.");d&&a.moveService.checkMove(d);var e=n.move.turnIndexAfterMove>=0&&n.yourPlayerIndex===n.move.turnIndexAfterMove;if(!e)throw new Error("Called communityMove when it wasn't your turn: yourPlayerIndex="+n.yourPlayerIndex+" turnIndexAfterMove="+n.move.turnIndexAfterMove);var f=n.playerIdToProposal[n.yourPlayerInfo.playerId];if(f)throw new Error("Called communityMove when yourPlayerId already made a proposal, see: "+angular.toJson(f,!0));if(j){var g=n;d?(g.turnIndexBeforeMove=g.move.turnIndexAfterMove,g.stateBeforeMove=g.move.stateAfterMove,g.playerIdToProposal={},g.yourPlayerIndex=d.turnIndexAfterMove,g.move=d):g.playerIdToProposal[g.yourPlayerInfo.playerId]=b,g.yourPlayerInfo.playerId="playerId"+Math.random(),a.$timeout(function(){c(g)},10)}else a.messageService.sendMessage({communityMove:{proposal:b,move:d,lastCommunityUI:n}});n=null}function e(a){m=angular.copy(a),l.updateUI(a)}function f(b){if(!m)throw new Error("Game called makeMove before getting updateUI or it called makeMove more than once for a single updateUI.");var c=m.turnIndexAfterMove>=0&&m.yourPlayerIndex===m.turnIndexAfterMove;if(!c)throw new Error("Game called makeMove when it wasn't your turn: yourPlayerIndex="+m.yourPlayerIndex+" turnIndexAfterMove="+m.turnIndexAfterMove);if(!b||!b.length)throw new Error("Game called makeMove with an empty move="+b);j?a.$timeout(function(){a.stateService.makeMove(b)},10):a.messageService.sendMessage({makeMove:b,lastUpdateUI:m}),m=null}function g(){return a.stateService.randomFromTo(l.minNumberOfPlayers,l.maxNumberOfPlayers+1)}function h(){for(var a=[],c=g(),d=0;c>d;d++){var e="onlyAIs"===b.playMode||0!==d&&"playAgainstTheComputer"===b.playMode?"":""+(d+42);a.push({playerId:e,avatarImageUrl:null,displayName:null})}return a}function i(d){if(l=d,o)throw new Error("You can call setGame exactly once!");o=!0;var f=h();j?(p.game&&(p.game.isHelpModalShown=!0),k?a.$timeout(function(){return c({yourPlayerIndex:0,yourPlayerInfo:{avatarImageUrl:"",displayName:"",playerId:"playerId"+Math.random()},playerIdToProposal:{},numberOfPlayers:g(),stateBeforeMove:null,turnIndexBeforeMove:0,move:{endMatchScores:null,turnIndexAfterMove:0,stateAfterMove:null}})},200):(a.stateService.setGame({updateUI:e,isMoveOk:l.isMoveOk}),a.stateService.initNewMatch(),a.stateService.setPlayMode(b.playMode),a.stateService.setPlayers(f),a.stateService.sendUpdateUi())):(a.messageService.addMessageListener(function(b){if(b.isMoveOk){var d=l.isMoveOk(b.isMoveOk);d!==!0&&(d={result:d,isMoveOk:b.isMoveOk}),a.messageService.sendMessage({isMoveOkResult:d})}else if(b.communityUI)c(b.communityUI);else if(b.updateUI)e(b.updateUI);else if(b.setLanguage)a.translate.setLanguage(b.setLanguage.language,b.setLanguage.codeToL10N),setTimeout(function(){a.messageService.sendMessage({setLanguageResult:!0})});else if(b.getGameLogs){var f=angular.fromJson(angular.toJson(a.log.getLogs()));setTimeout(function(){a.messageService.sendMessage({getGameLogsResult:f})})}else if(b.getStateForOgImage)a.messageService.sendMessage({sendStateForOgImage:l.getStateForOgImage()});else if(b.passMessageToGame){var g=b.passMessageToGame;g.SHOW_GAME_INSTRUCTIONS&&p.game&&(p.game.isHelpModalShown=!p.game.isHelpModalShown),l.gotMessageFromPlatform&&l.gotMessageFromPlatform(g)}}),a.messageService.sendMessage({gameReady:{}})),a.log.info("Passing a 'fake' updateUI message in order to show an empty board to a viewer (so you can NOT perform moves)"),e({move:[],turnIndexBeforeMove:0,turnIndexAfterMove:0,stateBeforeMove:null,stateAfterMove:{},yourPlayerIndex:-2,playersInfo:f,playMode:"passAndPlay",endMatchScores:null,moveNumber:0,randomSeed:"",numberOfPlayers:f.length})}var j=window.parent===window||"?test"===window.location.search,k=-1!==location.search.indexOf("community");b.playMode=-1!==location.search.indexOf("onlyAIs")?"onlyAIs":-1!==location.search.indexOf("playAgainstTheComputer")?"playAgainstTheComputer":-1!==location.search.indexOf("multiplayer")?"multiplayer":0===location.search.indexOf("?playMode=")?location.search.substr("?playMode=".length):"passAndPlay";var l,m=null,n=null;b.communityUI=c,b.communityMove=d,b.updateUI=e,b.makeMove=f;var o=!1,p=window;b.setGame=i}(b=a.gameService||(a.gameService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(a){return a?a[l]:null}function d(a){return{turnIndexBeforeMove:a.turnIndexBeforeMove,numberOfPlayers:a.numberOfPlayers,stateBeforeMove:c(a.stateBeforeMove),move:f(a.move)}}function e(a){return{playersInfo:a.playersInfo,yourPlayerIndex:a.yourPlayerIndex,playMode:a.playMode,turnIndexBeforeMove:a.turnIndexBeforeMove,numberOfPlayers:a.numberOfPlayers,stateBeforeMove:c(a.stateBeforeMove),move:{endMatchScores:a.endMatchScores,turnIndexAfterMove:a.turnIndexAfterMove,stateAfterMove:c(a.stateAfterMove)}}}function f(a){if(!a||0===a.length)return{endMatchScores:null,turnIndexAfterMove:0,stateAfterMove:null};if(2!==a.length||!a[0].setTurn&&!a[0].endMatch||!a[1].set)throw new Error("Internal error: old move should be an array with 2 operations! old move="+angular.toJson(a,!0));return{endMatchScores:a[0].endMatch?a[0].endMatch.endMatchScores:null,turnIndexAfterMove:a[0].setTurn?a[0].setTurn.turnIndex:-1,stateAfterMove:a[1].set.value}}function g(a){var b=-1===a.turnIndexAfterMove,c=!!a.endMatchScores;if(b&&!c)throw new Error("Illegal move: turnIndexAfterMove was -1 but you forgot to set endMatchScores. Move="+angular.toJson(a,!0));if(c&&!b)throw new Error("Illegal move: you set endMatchScores but you didn't set turnIndexAfterMove to -1. Move="+angular.toJson(a,!0))}function h(a){return g(a),[a.endMatchScores?{endMatch:{endMatchScores:a.endMatchScores}}:{setTurn:{turnIndex:a.turnIndexAfterMove}},{set:{key:l,value:a.stateAfterMove}}]}function i(b){var c={minNumberOfPlayers:b.minNumberOfPlayers,maxNumberOfPlayers:b.maxNumberOfPlayers,isMoveOk:function(c){var e=d(c);return a.log.info("Calling game.checkMoveOk:",e),b.checkMoveOk(e),!0},updateUI:function(c){var d=e(c);a.log.info("Calling game.updateUI:",d),b.updateUI(d)},communityUI:b.communityUI,gotMessageFromPlatform:b.gotMessageFromPlatform,getStateForOgImage:b.getStateForOgImage};a.gameService.setGame(c)}function j(b){a.log.info("Making move:",b),a.gameService.makeMove(h(b))}function k(b,c){a.log.info("Making communityMove: proposal=",b," move=",c),a.gameService.communityMove(b,c)}var l="state";b.checkMove=g,b.setGame=i,b.makeMove=j,b.communityMove=k}(b=a.moveService||(a.moveService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){function b(a){function b(){for(var a=document.getElementById(c),b=document.getElementById(d),g=a.width/e,h=a.height/f,i=b.getElementsByTagName("area"),j=0;j<i.length;j++){var k=i[j],l=k.getAttribute("data-original-coords");l||k.setAttribute("data-original-coords",k.getAttribute("coords"));for(var m=k.getAttribute("data-original-coords").split(","),n=[],o=0;o<m.length;++o){var p=Number(m[o]);o%2===0?n[o]=Math.round(p*g):n[o]=Math.round(p*h)}k.setAttribute("coords",n.toString())}}var c=a.imageId,d=a.mapId,e=a.originalWidth,f=a.originalHeight;document.addEventListener("onresize",b),document.addEventListener("orientationchange",b),setInterval(b,1e3)}a.resizeMapArea=b}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(a){function b(a,b,d,e,f,g){var h=c(a,b,d,e,f,g);return h?h:d(a,b)[0]}function c(a,b,c,f,g,h){if(!a||!c||!f)throw new Error("startingState or getNextStates or getStateScoreForIndex0 is null/undefined");if(0!==b&&1!==b)throw new Error("playerIndex must be either 0 or 1");if(!h.millisecondsLimit&&!h.maxDepth)throw new Error("alphaBetaLimits must have either millisecondsLimit or maxDepth");h.millisecondsLimit&&(h.millisecondsLimit=Math.min(400,h.millisecondsLimit));var i=(new Date).getTime();if(h.maxDepth)return e(a,b,c,f,g,h,i,0,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY).bestState;null!=g&&console.log("Doing iterative-deepeninh (A*) until we run out of time or find a certain win/lose move.");for(var j,k=1;;){null!=g&&console.log("Alpha-beta search until maxDepth="+k);var l=e(a,b,c,f,g,{maxDepth:k,millisecondsLimit:h.millisecondsLimit},i,0,Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY),m=l.bestScore,n=l.bestState;if(m===Number.POSITIVE_INFINITY||m===Number.NEGATIVE_INFINITY){var o=m===(0===b?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY);return console.log("Discovered that AI is going to "+(o?"win":"lose")+" with maxDepth="+k),null!=g&&console.log("Best state is "+g(n)),n}var p=d({millisecondsLimit:h.millisecondsLimit/2},i),q=d(h,i);if(p||q){var r=q&&1!==k?j:n;return q?console.log("Run out of time when maxDepth="+k+", so returning the best state for maxDepth="+(1===k?1:k-1)):console.log("Run out of half the time when maxDepth="+k+", so no point of exploring the next depth."),null!=g&&console.log("Best state is "+g(r)),r}j=n,k++}}function d(a,b){return a.millisecondsLimit&&(new Date).getTime()-b>a.millisecondsLimit}function e(a,b,c,f,g,h,i,j,k,l){var m=null,n=null;if(d(h,i))return null!=g&&console.log("Run out of time, just quitting from this traversal."),{bestScore:0,bestState:null};if(j===h.maxDepth)return m=f(a,b),null!=g&&console.log("Max depth reached, score is "+m),{bestScore:m,bestState:null};var o=c(a,b);if(null!=g&&console.log(g(a)+" has "+o.length+" next states"),0===o.length)return m=f(a,b),null!=g&&console.log("Terminal state, score is "+m),{bestScore:m,bestState:null};for(var p=0;p<o.length;p++){var q=o[p],r=e(q,1-b,c,f,g,h,i,j+1,k,l).bestScore;if(null!=g&&console.log("Score of "+g(q)+" is "+r),(null===m||0===b&&r>m||1===b&&m>r)&&(m=r,n=q),0===b){if(m>=l)return{bestScore:m,bestState:n};k=Math.max(k,m)}else{if(k>=m)return{bestScore:m,bestState:n};l=Math.min(l,m)}}return null!=g&&console.log("Best next state for playerIndex "+b+" is "+g(n)+" with score of "+m),{bestScore:m,bestState:n}}a.alphaBetaDecision=b}(b=a.alphaBetaService||(a.alphaBetaService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(b){function c(b,c){if(a.log.info("setWidthToHeight to ",b),g=b,h=c,f=j.getElementById("gameArea"),!f)throw new Error("You forgot to add to your <body> this div: <div id='gameArea'>...</div>");i=null,e(),setTimeout(e,10),setTimeout(e,100)}function d(a){return Math.round(100*a)/100}function e(){if(null!==g){var b=window.innerWidth,c=window.innerHeight,j=b,k=c;if(null===i||i.windowWidth!==j||i.windowHeight!==k){if(i={windowWidth:j,windowHeight:k},0===j||0===k)return a.log.info("Window width/height is 0 so hiding gameArea div."),void(f.style.display="none");f.style.display="block",a.$rootScope.$apply(function(){var l=j/k;l>g?j=d(k*g):k=d(j/g),a.log.info("Window size is "+i.windowWidth+"x"+i.windowHeight+" so setting gameArea size to "+j+"x"+k+" because widthToHeight="+g);var m=.95;j*=m,k*=m,f.style.width=j+"px",f.style.height=k+"px",f.style.position="absolute",f.style.left=(b-j)/2+"px",f.style.top=(c-k)/2+"px",h&&h(j,k),setTimeout(e,10)})}}}var f,g=null,h=null,i=null,j=window.document;b.setWidthToHeight=c,j.addEventListener("onresize",e),j.addEventListener("orientationchange",e),window.matchMedia&&window.matchMedia("(orientation: portrait)").addListener(e),setInterval(e,300)}(b=a.resizeGameAreaService||(a.resizeGameAreaService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){function b(){function b(b,d,g){g||(g=c);var h=null;if(f&&f[b]){var i=f[b];h=i[g],h||(h=i.en)}else e&&(h=e[b]);h||(h="["+b+"]",a.log.error("Couldn't find translationId="+b+" in language="+g));var j=a.$interpolate(h)(d||{});return-1!==j.indexOf("{{")&&a.log.error("You forgot to pass a translation parameter (interpolateParams) for translationId="+b+" in language="+g+" which resulted in '"+j+"' (note that you forgot to pass some {{XXX}})"),j}var c,d,e=null,f=null;return d=b,d.getLanguage=function(){return c},d.setTranslations=function(a){f=a},d.setLanguage=function(a,b){c=a,e=b},d}a.translate=b(),a.defaultTranslateInterpolateParams={},angular.module("translate",[]).filter("translate",["$parse",function(b){var c=function(c,d){return angular.isObject(d)||(d=b(d)(this)),d||(d=a.defaultTranslateInterpolateParams),a.translate(c,d)};return c.$stateful=!0,c}])}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){var b;!function(a){function b(a,b){function c(a){var b=a.changedTouches[0];g(a,a.type,b.clientX,b.clientY)}function d(a){h=!0,g(a,"touchstart",a.clientX,a.clientY)}function e(a){h&&g(a,"touchmove",a.clientX,a.clientY)}function f(a){h=!1,g(a,"touchend",a.clientX,a.clientY)}function g(a,c,d,e){a.preventDefault&&a.preventDefault(),a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0,a.returnValue=!1,console.log("handleDragEvent:",c,d,e),b(c,d,e,a)}if(!a||!b)throw new Error("When calling addDragListener(touchElementId, handleDragEvent), you must pass two parameters");var h=!1,i=document.getElementById(a);if(!i)throw new Error("You must have <div id='"+a+"'>...</div>");i.addEventListener("touchstart",c,!0),i.addEventListener("touchmove",c,!0),i.addEventListener("touchend",c,!0),i.addEventListener("touchcancel",c,!0),i.addEventListener("touchleave",c,!0),i.addEventListener("mousedown",d,!0),i.addEventListener("mousemove",e,!0),i.addEventListener("mouseup",f,!0)}a.addDragListener=b}(b=a.dragAndDropService||(a.dragAndDropService={}))}(gamingPlatform||(gamingPlatform={}));var gamingPlatform;!function(a){function b(){var b=window,c=a;for(var d in c)b[d]=c[d]}b(),setTimeout(b,0),window.oncontextmenu=function(a){return a.preventDefault(),a.stopPropagation(),!1},angular.module("gameServices",["translate"]).config(["$provide",function(a){a.decorator("$rootScope",["$delegate",function(a){return a.unsafeOldApply=a.$apply,a.$apply=function(b){var c=a.$$phase;"$apply"===c||"$digest"===c?b&&"function"==typeof b&&b():a.unsafeOldApply(b)},a}])}]).run(["$location","$rootScope","$timeout","$interval","$interpolate",function(c,d,e,f,g){a.$location=c,a.$rootScope=d,a.$timeout=e,a.$interval=f,a.$interpolate=g,b(),a.log.alwaysLog("Finished init of gameServices module; emulatorServicesCompilationDate=",emulatorServicesCompilationDate)}]).factory("$exceptionHandler",function(){function b(b,c){var d={gameUrl:""+window.location,exception:""+b,stack:""+(b?b.stack:"no stack"),cause:c,gameLogs:a.log.getLogs()};console.error("Game had an exception:\n",b," Full error message with logs: ",d),window.alert("Game had an unexpected error. If you know JavaScript, you can look at the console and try to debug it :)");var e=angular.fromJson(angular.toJson(d));window.parent.postMessage({emailJavaScriptError:e},"*")}return window.onerror=function(a,c,d,e,f){b(f,"Error: "+a+" Script: "+c+" Line: "+d+" Column: "+e)},b})}(gamingPlatform||(gamingPlatform={}));var gameLogic;!function(a){function b(){for(var a=[],b=0;136>b;b++)a[b]=b;a[136]=0;for(var b=135;b>=0;b--){var e=Math.floor(Math.random()*b),f=a[b];a[b]=a[e],a[e]=f}for(var g={hand:[],open:[]},h={hand:[],open:[]},i=[0,0,0,0,0,1,0],j={stock:a,px:g,po:h,legalMove:i,out:[],turn:-1},b=0;6>b;b++)b%2==0?c(j.stock,4,j.px):c(j.stock,4,j.po);return c(j.stock,1,j.px),c(j.stock,1,j.po),j.px.hand.sort(d),j.po.hand.sort(d),q=!0,j}function c(a,b,c){for(var d=0;b>d;d++){var e=a[a[136]]/4;c.hand.push(Math.floor(e)),a[136]++}}function d(a,b){return a-b}function e(a){for(var b=[],c=[],d=[],e=[],f=[],g=0;9>g;g++)c.push(a.reduce(function(a,b){return b==g?a+1:a},0));for(var g=9;18>g;g++)d.push(a.reduce(function(a,b){return b==g?a+1:a},0));for(var g=18;27>g;g++)e.push(a.reduce(function(a,b){return b==g?a+1:a},0));for(var g=27;34>g;g++)f.push(a.reduce(function(a,b){return b==g?a+1:a},0));return c.unshift(c.reduce(function(a,b){return a+b})),d.unshift(d.reduce(function(a,b){return a+b})),e.unshift(e.reduce(function(a,b){return a+b})),f.unshift(f.reduce(function(a,b){return a+b})),b.push(c),b.push(d),b.push(e),b.push(f),b}function f(a,b){if(0===a[0])return!0;for(var c=0,d=1;d<a.length;d++)if(0!==a[d]){c=d;break}var e=!1;return a[c]>=3?(a[c]-=3,a[0]-=3,e=f(a,b),a[c]+=3,a[0]+=3,e):!b&&8>c&&a[c+1]>0&&a[c+2]>0?(a[c]=a[c]-1,a[c+1]=a[c+1]-1,a[c+2]=a[c+2]-1,a[0]=a[0]-3,e=f(a,b),a[c]=a[c]+1,a[c+1]=a[c+1]+1,a[c+2]=a[c+2]+1,a[0]=a[0]+3,e):!1}function g(a){var b=angular.copy(a);if(14!=b.length)return!1;var c=!0;b.sort(d);for(var e=0;7>e;e++)if(b[2*e]!=b[2*e+1]){c=!1;break}return c}function h(a,b){var c=angular.copy(a);if(c.push(b),g(c))return!0;if(-1==[5,8,11,14].indexOf(c.length))throw console.log("Hu length of arr is illegal."),"Hu number of cards is illegal";for(var d=e(c),h=-1,i=!1,j=0;4>j;j++){var k=d[j][0]%3;if(1==k)return!1;if(2==k){if(i)return!1;h=j,i=!0}}if(!i)return!1;for(var j=0;4>j;j++)if(h!=j&&!f(d[j],3==j))return!1;for(var l=d[h],j=1;j<l.length;j++)if(l[j]>=2){if(l[j]-=2,l[0]-=2,f(l,3==h))return!0;l[j]+=2,l[0]+=2}return!1}function i(a,b){if(-1==[4,7,10,13].indexOf(a.length))throw console.log("Chi length of arr is illegal."),"Chi number of cards is illegal";var c=e(a),d=Math.floor(b/9),f=b%9;if(3==d)return[0,0,0];var g=c[d],h=0,i=0,j=0;return f>=2&&g[f]>=1&&g[f-1]>=1&&(j=1),f>=1&&7>=f&&g[f]>=1&&g[f+2]>=1&&(i=1),6>=f&&g[f+2]>=1&&g[f+3]>=1&&(h=1),[h,i,j]}function j(a,b){if(-1==[4,7,10,13].indexOf(a.length))throw console.log("Peng length of arr is illegal."),"Peng number of cards is illegal";return a.reduce(function(a,c){return c==b?a+1:a},0)>=2}function k(){return{board:b(),delta:null}}function l(a){return a.stock[136]>=136&&0===a.legalMove[5]}function m(a,b,e,f){a||(a=k());var g,h=a.board,i=angular.copy(h),j=1===i.turn||2===i.turn?"O":"X",m=f;4===b?(m=-1,i.turn=-1,1!==h.turn&&3!==h.turn||("X"===j?i.px.hand.push(e):i.po.hand.push(e)),g="X"===j?[1,0]:[0,1]):5===b&&l(h)?(i.turn=-1,m=-1,g=[0,0]):(i.turn=(i.turn+1)%4,g=null);var p="X"===j?i.px:i.po;"X"===j?i.po:i.px;if(0===b){var q=[e+1,e+2,e];n(p,q)}if(1===b){var q=[e-1,e+1,e];n(p,q)}if(2===b){var q=[e-1,e-2,e];n(p,q)}if(3===b){var q=[e,e,e];n(p,q)}if((3>=b||4===b&&(1===h.turn||3===h.turn))&&i.out.pop(),5===b&&(c(i.stock,1,p),e=p.hand[p.hand.length-1]),6===b){var r=p.hand.indexOf(e);if(-1===r)throw new Error("This pai does not belong to player x");p.hand.splice(r,1),p.hand.sort(d),i.out.push(e),m=(f+1)%2}var s=0===m?angular.copy(i.px.hand):angular.copy(i.po.hand),t=5===b?s.pop():e;i.legalMove=o(s,t,b,i.turn%2);var u=angular.copy(p.hand);if(5===b){var v=u.pop();p.hand=u.sort(d),p.hand.push(v)}else p.hand=u.sort(d);var w={pai:e,movetype:b},x={delta:w,board:i};return{endMatchScores:g,turnIndexAfterMove:m,stateAfterMove:x}}function n(a,b){for(var c=0;2>c;c++){var e=a.hand.indexOf(b[c]);if(-1===e)throw new Error("MovePaitoOPEN is illegal"+a.hand);a.hand.splice(e,1)}b.sort(d);for(var c=0;3>c;c++)a.open.push(b[c])}function o(a,b,c,d){var e=[];return 1===d?(e=i(a,b),j(a,b)?e.push(1):e.push(0),h(a,b)?e.push(1):e.push(0),e.push(1),e.push(0)):(e=[0,0,0,0],5!==c&&6!==c||!h(a,b)?e.push(0):e.push(1),e.push(0),e.push(1)),e}function p(a){var b=a.turnIndexBeforeMove,c=a.stateBeforeMove;if(c){var d=a.move,e=a.move.stateAfterMove.delta,f=e.pai,g=e.movetype,h=m(c,g,f,b);if(!angular.equals(d,h))throw new Error("Expected move="+angular.toJson(h,!0)+", but got stateTransition="+angular.toJson(a.move,!0))}}var q=!1;a.ifSevenDouble=g,a.getInitialState=k,a.createMove=m,a.checkMoveOk=p}(gameLogic||(gameLogic={}));var game;!function(a){function b(){translate.setTranslations(c()),translate.setLanguage("en"),log.log("Translation of 'RULES_OF_MAHJONG' is "+translate("RULES_OF_MAHJONG")),resizeGameAreaService.setWidthToHeight(1.5),moveService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,checkMoveOk:gameLogic.checkMoveOk,updateUI:g}),document.addEventListener("animationend",d,!1),document.addEventListener("webkitAnimationEnd",d,!1),document.addEventListener("oanimationend",d,!1);var a=window;a.HTMLInspector&&setInterval(function(){a.HTMLInspector.inspect({excludeRules:["unused-classes","script-placement"]})},3e3)}function c(){return{RULES_OF_MAHJONG:{en:"Rules of Mahjong",ch:"麻将规则"},RULES_SLIDE1:{en:"Try to match you tiles to a pattern that can HU by moves including CHI, PONG, ZHUA, DA",ch:"通过不断抓、打、吃、碰达到和牌的目的。"},RULES_SLIDE2:{en:"Your tiles should include ONE pair, and the rest match XXX or XYZ pattern.",ch:"和牌需要有一对将牌，其余的满足三个相同牌或者三个连续牌。"},CLOSE:{en:"Close",ch:"关闭"}}}function d(){$rootScope.$apply(function(){log.info("Animation ended"),a.animationEnded=!0,e()})}function e(){a.isComputerTurn&&(a.isComputerTurn=!1,moveService.makeMove(aiService.findComputerMove(a.move)))}function f(a){for(var b=[],c=0;a>c;c++)b.push(c);return b}function g(b){log.info("Game got updateUI:",b),a.animationEnded=!1,a.move=b.move,a.state=a.move.stateAfterMove,a.state||(a.state=gameLogic.getInitialState()),a.ifEnd=-1==b.move.turnIndexAfterMove,a.canMakeMove=a.move.turnIndexAfterMove>=0&&b.yourPlayerIndex===a.move.turnIndexAfterMove,a.canMakeMove&&(a.canSelectPai=a.state.board.turn%2===0),b.stateBeforeMove&&(5===a.state.delta.movetype?a.zhuaTurn=!0:a.zhuaTurn=!1),a.cpai=a.state.board.out[a.state.board.out.length-1],a.paiLeft=136-a.state.board.stock[136],a.player=0===b.yourPlayerIndex?a.state.board.px:a.state.board.po,a.opp=0===b.yourPlayerIndex?a.state.board.po:a.state.board.px,a.chand=a.player.hand,a.ohand=a.opp.hand,a.playerHandLength=a.chand.length,a.opponentHandLength=a.opp.hand.length,a.playerOpenLength=a.player.open.length,a.opponentOpenLength=a.opp.open.length,a.outLength=a.state.board.out.length,a.handindex=f(a.chand.length),a.opphandindex=f(a.opp.hand.length),a.openindex=f(a.player.open.length),a.oppopenindex=f(a.opp.open.length),a.outindex=f(a.outLength),a.isComputerTurn=a.canMakeMove&&""===b.playersInfo[b.yourPlayerIndex].playerId,a.isComputerTurn&&(a.canMakeMove=!1,a.state.delta||e())}function h(b){a.canSelectPai&&(a.paiSelected=a.chand[b],a.selectedIndex=b)}function i(b){return-1!=[2,5,8,11,14].indexOf(a.chand.length)&&b===a.chand.length-1&&a.zhuaTurn}function j(b){if(6===b){if(null===a.paiSelected)return void log.info("You need to select a Pai Before DA");a.cpai=a.paiSelected}else 5===b&&(a.cpai=null);if(log.info("Making move ",a.MOVE[b]),a.canMakeMove)try{var c=gameLogic.createMove(a.state,b,a.cpai,a.move.turnIndexAfterMove);a.canMakeMove=!1,moveService.makeMove(c)}catch(d){return void log.info(["something funny is happenning ...",b,a.cpai])}}function k(b){return a.canMakeMove?1===a.state.board.legalMove[b]:!1}function l(b){return b.target===b.currentTarget&&(b.preventDefault(),b.stopPropagation(),a.isHelpModalShown=!1),!0}a.animationEnded=!1,a.canMakeMove=!1,a.isComputerTurn=!1,a.move=null,a.isHelpModalShown=!1,a.paiSelected=null,a.cpai=null,a.chand=null,a.ohand=null,a.handindex=null,a.opphandindex=null,a.openindex=null,a.oppopenindex=null,a.playerHandLength=null,a.opponentHandLength=null,a.playerOpenLength=null,a.opponentOpenLength=null,a.outLength=null,a.outindex=null,a.player=null,a.opp=null,a.selectedIndex=-1,a.ifEnd=!1,a.paiLeft=null,a.canSelectPai=!1,a.zhuaTurn=!0,a.MOVE=["LCHI","MCHI","RCHI","PENG","HU","ZHUA","DA"],a.init=b,a.paiClicked=h,a.zhuaPai=i,a.optionClicked=j,a.ifLegalMove=k,a.clickedOnModal=l}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,game.init()});var aiService;!function(a){function b(a){return d(a,{millisecondsLimit:1e3})}function c(a,b){for(var c=[],d=0;d<gameLogic.ROWS;d++)for(var e=0;e<gameLogic.COLS;e++)try{c.push(gameLogic.createMove(a,d,e,b))}catch(f){}return c}function d(a,b){return alphaBetaService.alphaBetaDecision(a,a.turnIndexAfterMove,f,e,null,b)}function e(a,b){var c=a.endMatchScores;return c?c[0]>c[1]?Number.POSITIVE_INFINITY:c[0]<c[1]?Number.NEGATIVE_INFINITY:0:0}function f(a,b){return c(a.stateAfterMove,b)}a.findComputerMove=b,a.getPossibleMoves=c,a.createComputerMove=d}(aiService||(aiService={}));
//# sourceMappingURL=everything.min.js.map